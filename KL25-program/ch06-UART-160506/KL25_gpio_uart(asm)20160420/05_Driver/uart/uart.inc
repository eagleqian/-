#===========================================================================
#文件名称：uart.inc
#功能概要：KL25 uart底层驱动构件(汇编)头文件
#版权所有：苏州大学NXP嵌入式中心(sumcu.suda.edu.cn)
#版本更新：2016-04-20  V1.6
#===========================================================================
#ifndef UART_INC       
#define UART_INC
#============================================================================
#包含外部构件头文件
#============================================================================

.include "gpio.inc"

#===========================================================================
#定义了串口号及时钟源
#===========================================================================
.equ UART0,(0)
.equ UART1,(1)
.equ UART2,(2)

.equ MCGIRCLK,4000
.equ MCGPLL,48000
.equ BUSCLK,24000

.equ UART0_MCGIRCLK, ((UART0<<16) | MCGIRCLK)
.equ UART0_MCGPLL, ((UART0<<16) | MCGPLL)
.equ UART1_BUSCLK, ((UART1<<16) | BUSCLK)
.equ UART2_BUSCLK, ((UART2<<16) | BUSCLK)
#===========================================================================
#定义uart各模块地址
#===========================================================================
.section .rodata
UART_BASE_PTR: .word 0x4006A000,0x4006B000,0x4006C000
UART_BASE_TXD: .word 0x40049000+14*0x4,0x40049000+0x4000,0x40049000+0x4000+0x22*0x4
UART_BASE_RXD: .word 0x40049000+15*0x4,0x40049000+0x4000+1*0x4,0x40049000+0x4000+23*0x4

.equ SIM_SOPT2,0x40048004
.equ SIM_MCGIRCLK,0xc000000
.equ SIM_MCGFLLCLK,0x4000000
.equ SIM_SCGC4,0x40048034 

.equ UART_BDH,0x0
.equ UART_BDL,0x1
.equ UART_C1,0x2
.equ UART_C2,0x3
.equ UART_C3,0x6
.equ UART_C4,0x0A
.equ UART_MA1,0x8
.equ UART_MA2,0x9
.equ UART_S1,0x4
.equ UART_S2,0x5 
.equ UART_D,0x7

.equ uart_s1_TDRE_mask,0x80 
.equ uart_c2_RIE_mask,0x20
.equ uart_s1_RDRF_mask,0x20


#===========================================================================
#定义了引脚的值
#===========================================================================
@.equ UART1_TXD,0x40049000+0x4000
@.equ UART1_RXD,0x40049000+0x4000+1*0x4
@.equ UART2_TXD,0x40049000+0x4000+0x22*0x4
@.equ UART2_RXD,0x40049000+0x4000+23*0x4
@.equ UART0_TXD,0x40049000+14*0x4
@.equ UART0_RXD,0x40049000+15*0x4


#===========================================================================
# 函数名称：uart_init   
# 函数返回：无                
# 参数说明：r0:((串口号)|(时钟源KHz)) 例:(UART1|BUSCLK)表示UART1、总线时钟
#           r1: 波特率：300、600、1200、2400、4800、9600、19200、115200...
# 功能概要：初始化uart模块。当选择UART0时,时钟源只能选择MCGIRCLK或MCGPLL（若选择MCGIRCLK时
#           波特率需小于19200）;当为UART1、2时，时钟源只能选择BUSCLK
#===========================================================================
 .global uart_init
 
#============================================================================
#函数名称：uart_send1
#参数说明：r0:串口号
#          r1:要发送的字节
#函数返回：r0:0=正常,1=异常
#功能概要：串行发送1个字节    
#============================================================================
 .global uart_send1
#============================================================================
#函数名称：uart_sendN
#参数说明：r0:串口号
#         r1:待发送数据缓冲区的首地址
#         r2:发送长度
#函数返回：r0:0=正常,1=异常。
#功能概要：串行发送n个字节 
#============================================================================
  .global uart_sendN
#============================================================================
#函数名称：uart_send_str
#参数说明：r0:串口号
#         r1:待发送字符串的首地址
#函数返回： r0:0=正常,1=异常
#功能概要：从指定串口发送一个以'\0'结束的字符串
#============================================================================
  .global uart_send_str

#============================================================================
#函数名称：uart_re1
#参数说明：r0:串口号
#函数返回：r0:0=正常,1=异常
#          r1:接收返回字节
#功能概要：串行接收1个字节
#============================================================================
  .global uart_re1

#============================================================================
#函数名称：uart_reN
#参数说明：r0:串口号
#         r1:接收缓冲区首地址
#         r2:接收长度
#函数返回：r0:0=正常,1=异常。
#功能概要：串行接收N个字节
#============================================================================
  .global uart_reN 

#============================================================================
#函数名称：uart_enable_re_int
#参数说明：r0:串口号
#函数返回：无
#功能概要：开串口接收中断
#============================================================================
  .global uart_enable_re_int

#============================================================================
#函数名称：uart_disable_re_int
#参数说明：r0:串口号
#函数返回：无
#功能概要：关串口接收中断
#============================================================================
  .global uart_disable_re_int


#endif


















